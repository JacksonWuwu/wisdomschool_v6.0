<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wstom.admin.mapper.GradesMapper">

    <resultMap type="Grades" id="GradesResult">
        <result property="id" column="id"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
        <result property="version" column="version"/>
        <result property="name" column="name"/>
    </resultMap>

    <sql id="selectGradesVo">
        select id,
               create_by,
               create_time,
               update_by,
               update_time,
               remark,
               version,
               name
        from tb_grades
    </sql>

    <select id="selectList" parameterType="Grades" resultMap="GradesResult">
        <include refid="selectGradesVo"/>
        <where>
            <if test="id != null ">and id = #{id}</if>
            <if test="createBy != null  and createBy.trim() != '' ">and create_by = #{createBy}</if>
            <if test="createTime != null ">and create_time = #{createTime}</if>
            <if test="updateBy != null  and updateBy.trim() != '' ">and update_by = #{updateBy}</if>
            <if test="updateTime != null ">and update_time = #{updateTime}</if>
            <if test="remark != null  and remark.trim() != '' ">and remark = #{remark}</if>
            <if test="version != null ">and version = #{version}</if>
            <if test="name != null  and name.trim() != '' ">and name = #{name}</if>
        </where>
    </select>

    <select id="selectById" resultMap="GradesResult">
        <include refid="selectGradesVo"/>
        where id = #{id}
    </select>

    <insert id="insert"
            parameterType="Grades">
        insert into tb_grades
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null  ">id,</if>
            <if test="createBy != null  and createBy != ''  ">create_by,</if>
            <if test="updateBy != null  and updateBy != ''  ">update_by,</if>
            <if test="updateTime != null  ">update_time,</if>
            <if test="remark != null  and remark != ''  ">remark,</if>
            <if test="version != null  ">version,</if>
            <if test="name != null  and name != ''  ">name,</if>
            create_time
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null  ">#{id},</if>
            <if test="createBy != null  and createBy != ''  ">#{createBy},</if>
            <if test="updateBy != null  and updateBy != ''  ">#{updateBy},</if>
            <if test="updateTime != null  ">#{updateTime},</if>
            <if test="remark != null  and remark != ''  ">#{remark},</if>
            <if test="version != null  ">#{version},</if>
            <if test="name != null  and name != ''  ">#{name},</if>
            sysdate()
        </trim>
    </insert>

    <select id="checkGradesNameUnique" parameterType="Grades" resultMap="GradesResult">
        <include refid="selectGradesVo"/>
        where name=#{name}
    </select>

    <select id="selectCount" parameterType="String" resultType="int">
        select count(*) from tb_grades
        <where>
            <if test="name != null and name != ''">
                AND name = #{name}
            </if>
        </where>
    </select>

    <update id="update" parameterType="Grades">
        update tb_grades
        <trim prefix="SET" suffixOverrides=",">
            <if test="updateBy != null  and updateBy != ''  ">update_by = #{updateBy},</if>
            <if test="remark != null  and remark != ''  ">remark = #{remark},</if>
            <if test="version != null  ">version = #{version},</if>
            <if test="name != null  and name != ''  ">name = #{name},</if>
            update_time = sysdate()
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteById" parameterType="String">
        delete
        from tb_grades
        where id = #{id}
    </delete>

    <delete id="deleteBatchIds" parameterType="String">
        delete from tb_grades where id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>
